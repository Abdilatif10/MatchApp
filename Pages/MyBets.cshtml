@page
@using SimpleApp.Models;
@model MyBetsModel
@{
    ViewData["Title"] = "Mina Bets";
}

<h2 class="mb-4">Dina Lagda Bets</h2>

@if (Model.UserBets != null && Model.UserBets.Any())
{
    <h3 class="mb-3">Aktiva Bets</h3>
    <div class="row">
        @foreach (var betViewModel in Model.UserBets.Where(bet => bet.Match.Status == "TIMED"))
        {
            <div class="col-md-5 mb-4">
                <div class="card shadow-sm @GetCardBorderClass(betViewModel)">
                    <div class="card-body">
                        <h5 class="card-title">
                            <img src="@betViewModel.Match.HomeTeam.Crest" alt="@betViewModel.Match.HomeTeam.Name logo" class="team-logo" style="width: 30px; height: 30px; margin-right: 5px; vertical-align: middle;" />
                            @betViewModel.Match.HomeTeam.Name vs
                            <img src="@betViewModel.Match.AwayTeam.Crest" alt="@betViewModel.Match.AwayTeam.Name logo" class="team-logo" style="width: 30px; height: 30px; margin-left: 5px; vertical-align: middle;" />
                            @betViewModel.Match.AwayTeam.Name
                        </h5>
                        <p class="card-text"><strong>Insats:</strong> @betViewModel.Bet.Amount points</p>
                        <p class="card-text"><strong>Bettyp:</strong> @betViewModel.Bet.BetType</p>
                        <p class="card-text"><strong>Match Tid:</strong> @betViewModel.Match.UtcDate.ToString("yyyy-MM-dd HH:mm")</p>
                        <p class="card-text"><strong>Möjlig utbetalning:</strong> @betViewModel.Bet.PotentialPayout points</p>
                        <span class="badge bg-primary">Planerad</span>
                    </div>
                </div>
            </div>
        }
    </div>

    <h3 class="mt-5 mb-3">Avgjorda Bets</h3>
    <div class="row">
        @foreach (var betViewModel in Model.UserBets.Where(bet => bet.Match.Status == "FINISHED" || bet.Match.Status == "POSTPONED"))
        {
            <div class="col-md-5 mb-4">
                <div class="card shadow-sm @GetCardBorderClass(betViewModel)">
                    <div class="card-body">
                        <h5 class="card-title">
                            <img src="@betViewModel.Match.HomeTeam.Crest" alt="@betViewModel.Match.HomeTeam.Name logo" class="team-logo" style="width: 30px; height: 30px; margin-right: 5px; vertical-align: middle;" />
                            @betViewModel.Match.HomeTeam.Name vs
                            <img src="@betViewModel.Match.AwayTeam.Crest" alt="@betViewModel.Match.AwayTeam.Name logo" class="team-logo" style="width: 30px; height: 30px; margin-left: 5px; vertical-align: middle;" />
                            @betViewModel.Match.AwayTeam.Name
                        </h5>
                        <p class="card-text"><strong>Insats:</strong> @betViewModel.Bet.Amount points</p>
                        <p class="card-text"><strong>Bettyp:</strong> @betViewModel.Bet.BetType</p>
                        <p class="card-text"><strong>Match Tid:</strong> @betViewModel.Match.UtcDate.ToString("yyyy-MM-dd HH:mm")</p>
                        <p class="card-text"><strong>Möjlig utbetalning:</strong> @betViewModel.Bet.PotentialPayout points</p>
                        <span class="badge @(betViewModel.Match.Status == "POSTPONED" ? "bg-warning" : (betViewModel.IsWon ? "bg-success" : "bg-danger"))">
                            @(betViewModel.Match.Status switch
                            {
                                "POSTPONED" => "Uppskjuten",
                                "FINISHED" => betViewModel.IsWon ? "Vinst" : "Förlust",
                                _ => "Okänd"
                            })
                        </span>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p class="text-muted">Du har inte lagt några bets än.</p>
}

@functions {
    public string GetCardBorderClass(BetViewModel betViewModel)
    {
        if (betViewModel.Match.Status == "POSTPONED")
        {
            return "border-warning";
        }
        if (betViewModel.Match.Status == "FINISHED")
        {
            return betViewModel.IsWon ? "border-success" : "border-danger";
        }
        return "border-secondary";
    }
}
